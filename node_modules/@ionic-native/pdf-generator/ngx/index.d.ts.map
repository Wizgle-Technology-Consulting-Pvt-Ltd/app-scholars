{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nexport interface PDFGeneratorOptions {\n    /**\n     * The document size, e.g., A2, A3, or A4.\n     * Only supported on iOS.\n     * The default is 'A4'.\n     */\n    documentSize?: string;\n    /**\n     * Option to change to landscape orientation.\n     * Default is 'portrait'.\n     */\n    landscape?: 'landscape' | 'portrait';\n    /**\n     * The type to be returned, either 'share' or 'base64'.\n     * If 'share is chosen, the PDF is shared with the system capabilities.\n     * Default is 'base64'\n     */\n    type?: string;\n    /**\n     * The desired filename the resulting PDF should have.\n     * Default is 'default.pdf'\n     */\n    fileName?: string;\n    /**\n     * Option to set the base URL for pathing.\n     * Default is 'null'.\n     */\n    baseUrl?: string;\n}\n/**\n * @name PDFGenerator\n * @description\n * Simple plugin to generate (offline) pdf. The plugin transforms HTML to PDF and also provide the mechanism to share the pdf to other apps like Mail, etc.\n *\n * @usage\n * ```typescript\n * import { PDFGenerator } from '@ionic-native/pdf-generator';\n *\n * constructor(private pdfGenerator: PDFGenerator) { }\n *\n * ...\n *\n * this.pdfGenerator.fromURL(url, options).then(base64String => console.log(base64String));\n *\n * ```\n */\nexport declare class PDFGenerator extends IonicNativePlugin {\n    /**\n     * Creates a PDF using a URL, it download the document into an in memory Webkit object, and renders it into a PDF.\n     * @param url {string} URL to create a PDF from\n     * @param options {PDFGeneratorOptions} options for PDF generation\n     * @returns {Promise<string>}\n     */\n    fromURL(url: string, options?: PDFGeneratorOptions): Promise<string>;\n    /**\n     * Creates a PDF using string with the HTML representation, it download the document into an in memory Webkit object, and renders it into a PDF.\n     * @param data {string} HTML string representation to create a PDF from\n     * @param options {PDFGeneratorOptions} options for PDF generation\n     * @returns {Promise<string>}\n     */\n    fromData(data: string, options?: PDFGeneratorOptions): Promise<string>;\n}\n"]}